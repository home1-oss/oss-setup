# Pull and run the rancher_agent Docker image,
# first it will use Rancherâ€™s API to return the registration token
# to run each agent with the right registration url,
# this token is needed to register hosts in Rancher environment:
---
- name: Install httplib2
  apt:
      name=python-httplib2
      #update_cache=yes

- name: Get rancher projects info
  action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_server }}:{{ rancher_port }}/v1/projects" return_content=yes
  register: projects_resp

- name: Get rancher projectId of {{ rancher_project_name }}
  set_fact:
      rancher_project_id: "{{ projects_resp.json | json_query(query) }}"
  vars:
      query: "data[?name=='{{ rancher_project_name }}'].id | [0]"
      # see: http://jmespath.org/

- debug: msg="projectId of {{ rancher_project_name }} is {{ rancher_project_id }}"

- name: Return the registration token URL of Rancher server
  action: uri
      method=POST
      status_code=201
      url="http://{{ rancher_server }}:{{ rancher_port }}/v1/registrationtokens?projectId={{ rancher_project_id }}" return_content=yes
      #url="http://{{ rancher_server }}:{{ rancher_port }}/v1/registrationtokens?projectId={{ projects_resp.json['data'][0]['id'] }}" return_content=yes
  register: rancher_token_url

- name: Return the registration URL of Rancher server
  action: uri
      method=GET
      url={{ rancher_token_url.json['links']['self'] }} return_content=yes
  register: rancher_token

# Then it will make sure that no other agent is running on the server
# and it will run the Rancher Agent:
- name: Check if the rancher-agent is running
  command: docker ps -a
  register: containers

- name: pull rancher/agent
  docker_image:
      name: rancher/agent:v{{ rancher_agent_version }}

- name: Register the Host machine with the Rancher server on {{ ansible_hostname }} ({{ ansible_ssh_host }})
  docker_container:
      #auto_remove: True
      command: "{{ rancher_token.json['registrationUrl'] }}"
      detach: True
      image: rancher/agent:v{{ rancher_agent_version }}
      name: "rancher-agent-{{ ansible_hostname }}-{{ rancher_project_id }}"
      privileged: yes
      state: started
      volumes: /var/run/docker.sock:/var/run/docker.sock
  when: "{{ 'rancher-agent-{{ ansible_hostname }}-{{ rancher_project_id }}' not in containers.stdout }}"
