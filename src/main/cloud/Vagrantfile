# -*- mode: ruby -*-
# vi: set ft=ruby :

INIT_SH_PATH = File.join(File.dirname(__FILE__), "vagrant_assets/init.sh")
SYSCTL_CONF_PATH = File.join(File.dirname(__FILE__), "vagrant_assets/sysctl.conf")
VAGRANT_PUB_PATH = File.join(File.dirname(__FILE__), "vagrant_assets/vagrant.pub")

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
#
Vagrant.configure(2) do |config|

  #config.ssh.forward_agent = true
  config.ssh.insert_key = false
  #machine.ssh.username = 'vagrant'
  #config.ssh.password = 'vagrant'

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'" # avoids 'stdin: is not a tty' error.
  config.ssh.private_key_path = ["#{ENV['HOME']}/.vagrant.d/insecure_private_key","#{ENV['HOME']}/.ssh/id_rsa"]

  config.vm.box_check_update = false

  config.vm.define "rancherserver" do |rancherserver|
    rancherserver.vm.hostname = 'rancherserver'
    rancherserver.vm.box= "ubuntu/trusty64"
    rancherserver.vm.box_url = "ubuntu/trusty64"

    rancherserver.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", disabled: "true"
    rancherserver.vm.network "forwarded_port", guest: 22, host: 60100, auto_correct: true
    #rancherserver.vm.network :private_network, ip: "172.22.101.100", netmask: "255.255.255.0", nic_type: "82545EM"
    rancherserver.vm.network "public_network", ip: "192.168.199.100", netmask: "255.255.255.0", nic_type: "82545EM"

    rancherserver.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1536]
      v.customize ["modifyvm", :id, "--name", "rancherserver"]
      #v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      #v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end
  end

  N = 3
  (1..N).each do |machine_id|
    config.vm.define "rancherhost#{machine_id}" do |machine|
      machine.vm.box= "ubuntu/trusty64"
      machine.vm.box_url = "ubuntu/trusty64"

      if machine_id == 1
        machine.vm.box= "ubuntu/xenial64"
        machine.vm.box_url = "ubuntu/xenial64"
        # see: https://github.com/mitchellh/vagrant/issues/7350
        machine.vm.provision "shell", inline: <<-SHELL
         echo "ubuntu:ubuntu" | sudo chpasswd
        SHELL
      end
      if machine_id == 2
        machine.vm.box= "centos/7"
        machine.vm.box_url = "centos/7"
        # centos/7 "rsync" could not be found on your PATH. Make sure that rsync ...
        #machine.vm.synced_folder ".", "/vagrant", type: "virtualbox"
        machine.vm.synced_folder ".", "/vagrant", disabled: true
      end

      machine.vm.hostname = "rancherhost#{machine_id}"
      machine.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", disabled: "true"
      machine.vm.network "forwarded_port", guest: 22, host: 60100+machine_id, auto_correct: true
      #machine.vm.network "private_network", ip: "172.22.101.#{100+machine_id}", netmask: "255.255.255.0", nic_type: "82545EM"
      machine.vm.network "public_network", ip: "192.168.199.#{100+machine_id}", netmask: "255.255.255.0", nic_type: "82545EM"

      machine.vm.provider :virtualbox do |v|
        v.customize ["modifyvm", :id, "--cpus", 2]
        #v.customize ["modifyvm", :id, "--memory", 4096]
        v.customize ["modifyvm", :id, "--memory", 6144]
        v.customize ["modifyvm", :id, "--name", "rancherhost#{machine_id}"]
        #v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        #v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      end

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      #if machine_id == N
      #  machine.vm.provision :ansible do |ansible|
      #    # Disable default limit to connect to all the machines
      #    ansible.limit = "all"
      #    ansible.playbook = "playbook.yml"
      #  end
      #end
    end
  end

  config.vm.provision "shell", :privileged => true, inline: "echo whoami $(whoami) pwd $(pwd)"
  if File.exist?(VAGRANT_PUB_PATH)
    config.vm.provision :file, :source => "#{VAGRANT_PUB_PATH}", :destination => "/tmp/authorized_keys"
  else
    config.vm.provision "shell", :privileged => true, inline: "sudo curl -o /tmp/authorized_keys https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub"
  end
  config.vm.provision "shell", :privileged => true, inline: <<-SCRIPT
    mkdir -p /root/.ssh
    cp -f /tmp/authorized_keys /root/.ssh/authorized_keys
    printf "write %s into /root/.ssh/authorized_keys\n" "#{ENV['HOME']}/.ssh/id_rsa.pub"
    printf "%s\n" "#{File.read("#{ENV['HOME']}/.ssh/id_rsa.pub")}" >> /root/.ssh/authorized_keys
    chmod 600 /root/.ssh/authorized_keys
    chown -R root:root /root/.ssh
  SCRIPT

  if File.exist?(SYSCTL_CONF_PATH)
    config.vm.provision :file, :source => "#{SYSCTL_CONF_PATH}", :destination => "/tmp/sysctl.conf"
    config.vm.provision :shell, :privileged => true, :inline => "if [[ -f /tmp/sysctl.conf ]]; then mv /tmp/sysctl.conf /etc/sysctl.conf; sysctl -p; fi"
  end
  if File.exist?(INIT_SH_PATH)
    config.vm.provision :file, :source => "#{INIT_SH_PATH}", :destination => "/tmp/init.sh"
    config.vm.provision :shell, :privileged => true, :inline => "chmod 755 /tmp/init.sh"
    config.vm.provision :shell, :privileged => true, :inline => "/tmp/init.sh"
  end

  config.vm.provision "shell", run: "always", inline: <<-SCRIPT
    route add default gw 192.168.199.1
    #route -A inet6 add default gw fc00::1 eth2
    eval `route -n | awk '{ if ($8 =="eth0" && $2 != "0.0.0.0") print "route del default gw " $2; }'`
    #eval `route -n | awk '{ if ($8 =="eth1" && $2 != "0.0.0.0") print "route del default gw " $2; }'`
  SCRIPT
end
