
Vagrant.configure(2) do |config|

    config.ssh.insert_key = false

    config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'" # avoids 'stdin: is not a tty' error.
    config.ssh.private_key_path = ["#{ENV['HOME']}/.vagrant.d/insecure_private_key","#{ENV['HOME']}/.ssh/id_rsa"]

    config.vm.provision "shell", inline: <<-SCRIPT
      curl https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub > /root/.ssh/authorized_keys
      printf "%s\n" "#{File.read("#{ENV['HOME']}/.ssh/id_rsa.pub")}" >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      chown -R root:root /root/.ssh
    SCRIPT

    config.vm.define "repository" do |repository|
      repository.vm.hostname = 'repository'
      repository.vm.box= "ubuntu/trusty64"
      repository.vm.box_url = "ubuntu/trusty64"

      repository.vm.network :private_network, ip: "172.22.101.10",
        nic_type: "82545EM"

      repository.vm.provider :virtualbox do |v|
        v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        v.customize ["modifyvm", :id, "--cpus", 2]
        v.customize ["modifyvm", :id, "--memory", 4096]
        v.customize ["modifyvm", :id, "--name", "repository"]
        v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      end
    end
end
