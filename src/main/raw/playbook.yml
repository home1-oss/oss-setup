---
- name: Installing and configuring Docker
  hosts: all
  roles:
  - { role: home1-oss.oss-docker-install, tags: ["docker"] }

#- name: Installing and configuring Docker
#  hosts: all
#  roles:
#  - { role: docker, tags: ["docker"] }

- name: clean up
  hosts: all
  tasks:
  - shell: docker images | grep none | awk '{print $3}' | xargs docker rmi; docker rmi $(docker images -f "dangling=true" -q); docker volume rm $(docker volume ls -qf dangling=true)
    ignore_errors: true
    sudo: yes
    tags:
    - always

- name: dns
  hosts: "net"
  vars:
    git_repo: https://github.com/home1-oss/docker-bind.git
    git_dest: /tmp/docker-bind
    file: docker-compose.yml
    pull: yes
  environment:
    FORWARDERS: "{{ forwarders }}"
    INFRASTRUCTURE: "{{ infrastructure }}"
  roles:
  - { role: docker-compose, tags: ["dns"] }
- hosts: "net"
  tasks:
  - name: DNS record of bind
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} bind A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} bind A 172.22.101.5"
    sudo: yes
    tags: ["dns"]

- name: Setup /etc/resolv.conf
  hosts: ["repository", "ci"]
  vars:
    resolv_conf_nameservers:
    - 172.22.101.5
    - "{{ forwarders }}"
    - 8.8.4.4
    - 8.8.8.8
    #resolv_conf_search_domains:
    #- example.com
  roles:
  - { role: kbrebanov.resolv_conf, tags: ["dns"] }

- name: privoxy
  hosts: "net"
  vars:
    git_repo: https://github.com/home1-oss/docker-privoxy.git
    git_dest: /tmp/docker-privoxy
    file: docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    SOCKS_PROXY: "{{ proxy }}"
  roles:
  - { role: docker-compose, tags: ["privoxy"] }
- hosts: "net"
  tasks:
  - name: DNS record of smart-http-proxy
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} http-to-socks A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} http-to-socks A 172.22.101.5"
    sudo: yes
    tags: ["dns"]
  - name: DNS record of http-to-socks
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} smart-http-proxy A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} smart-http-proxy A 172.22.101.5"
    sudo: yes
    tags: ["dns", "privoxy"]

- name: LDAP
  hosts: "net"
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
  roles:
  - { role: docker-openldap, tags: ["ldap"] }
- hosts: "net"
  tasks:
  - name: DNS record of ldap
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} ldap A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} ldap A 172.22.101.5"
    sudo: yes
    tags: ["dns"]
  - name: DNS record of phpldapadmin
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} phpldapadmin A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} phpldapadmin A 172.22.101.5"
    sudo: yes
    tags: ["dns", "ldap"]


- name: gcr.io
  hosts: "repository"
  vars:
    git_repo: https://github.com/home1-oss/docker-pull-through-cache.git
    git_dest: /tmp/docker-pull-through-cache
    file: docker-compose-mirror-gcr.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    PROXY: "{{ proxy }}"
    PULL_THROUGH_CACHE_OF: https://gcr.io
    PULL_THROUGH_CACHE_PORT: 25004
  roles:
  - { role: docker-compose, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of gcr.io
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} gcr.io A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} gcr.io A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: nexus3
  hosts: "repository"
  vars:
    git_repo: https://github.com/home1-oss/docker-nexus3.git
    git_dest: /tmp/docker-nexus3
    file: docker-compose.yml
    pull: yes
  environment:
    DOCKER_MIRROR_GCR: http://gcr.io.internal:25004
    INFRASTRUCTURE: "{{ infrastructure }}"
    NEXUS_CONTEXT: nexus
    NEXUS3_CONTEXT: nexus
    NEXUS3_DEPLOYMENT_PASSWORD: deployment
    NEXUS3_PORT: 28081
  roles:
  - { role: docker-compose, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of nexus3
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} nexus3 A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} nexus3 A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: fileserver
  hosts: "repository"
  vars:
    file: docker-compose-fileserver.yml
  environment:
    BACKEND_DOMAIN: nexus3
    INFRASTRUCTURE: "{{ infrastructure }}"
    SERVER_LOCATION: ~ ^/(.*)
    SERVER_PROXY_PASS_CONTEXT: /nexus/repository/files/$1
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of fileserver
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} fileserver A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} fileserver A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: mirror.docker
  hosts: "repository"
  vars:
    file: docker-compose-mirror.yml
  environment:
    BACKEND_DOMAIN: nexus3
    BASIC_AUTH_PASS: deployment
    BASIC_AUTH_USER: deployment
    INFRASTRUCTURE: "{{ infrastructure }}"
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of mirror.docker
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} mirror.docker A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} mirror.docker A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: mvnsite
  hosts: "repository"
  vars:
    file: docker-compose-mvnsite.yml
  environment:
    BACKEND_DOMAIN: nexus3
    INFRASTRUCTURE: "{{ infrastructure }}"
    SERVER_LOCATION: ~ ^/(.*)
    SERVER_PROXY_PASS_CONTEXT: /nexus/repository/mvnsite/$1
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of mvnsite
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} mvnsite A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} mvnsite A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: nexus
  hosts: "repository"
  vars:
    file: docker-compose-nexus.yml
  environment:
    BACKEND_DOMAIN: nexus3
    INFRASTRUCTURE: "{{ infrastructure }}"
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of nexus
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} nexus A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} nexus A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: registry.docker
  hosts: "repository"
  vars:
    file: docker-compose-registry.yml
  environment:
    BACKEND_DOMAIN: nexus3
    BASIC_AUTH_PASS: deployment
    BASIC_AUTH_USER: deployment
    INFRASTRUCTURE: "{{ infrastructure }}"
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
- hosts: "net"
  tasks:
  - name: DNS record of registry.docker
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} registry.docker A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} registry.docker A 172.22.101.10"
    sudo: yes
    tags: ["dns", "nexus3"]

- name: docker-proxy
  hosts: "repository"
  vars:
    file: docker-compose.yml
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    SERVER_DOMAIN: "*"
  roles:
  - { role: docker-proxy, tags: ["nexus3"] }
#- hosts: "net"
#  tasks:
#  - name: DNS record of docker-proxy
#    shell: "{{ item }}"
#    with_items:
#    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} docker-proxy A"
#    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} docker-proxy A 172.22.101.10"
#    sudo: yes
#    tags: ["dns", "nexus3"]

- name: mysql
  hosts: "repository"
  vars:
    git_repo: https://github.com/home1-oss/docker-mysql.git
    git_dest: /tmp/docker-mysql
    file: mysql-5.6/docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: user
    MYSQL_PASSWORD: user_pass
    DB_NAME: db
  roles:
  - { role: docker-compose, tags: ["mysql"] }
- hosts: "net"
  tasks:
  - name: DNS record of mysql
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} mysql A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} mysql A 172.22.101.10"
    sudo: yes
    tags: ["dns", "mysql"]

- name: postgresql
  hosts: "repository"
  vars:
    git_repo: https://github.com/home1-oss/docker-postgresql.git
    git_dest: /tmp/docker-postgresql
    file: docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    POSTGRES_USER: user
    POSTGRES_PASSWORD: user_pass
    SONARQUBE_JDBC_USERNAME: sonar
    SONARQUBE_JDBC_PASSWORD: sonar
  roles:
  - { role: docker-compose, tags: ["postgresql"] }
- hosts: "net"
  tasks:
  - name: DNS record of postgresql
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} postgresql A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} postgresql A 172.22.101.10"
    sudo: yes
    tags: ["dns", "postgresql"]

- name: cloudbus
  hosts: "repository"
  vars:
    git_repo: https://github.com/home1-oss/docker-cloudbus.git
    git_dest: /tmp/docker-cloudbus
    #file: rabbitmq-management/docker-compose.yml
    file: docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    SPRING_RABBITMQ_USERNAME: user
    SPRING_RABBITMQ_PASSWORD: user_pass
  roles:
  - { role: docker-compose, tags: ["cloudbus"] }
- hosts: "net"
  tasks:
  - name: DNS record of cloudbus
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} cloudbus A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} cloudbus A 172.22.101.10"
    sudo: yes
    tags: ["dns", "cloudbus"]

- name: Docker config
  hosts: ["ci"]
  sudo: yes
  roles:
    - { role: home1-oss.oss-docker-config, tags: ["docker-config"] }
#- name: Docker config
#  hosts: all
#  sudo: yes
#  roles:
#    - { role: oss-docker-config, tags: ["docker-config"] }


- name: sonarqube
  hosts: "ci"
  vars:
    git_repo: https://github.com/home1-oss/docker-sonarqube.git
    git_dest: /tmp/docker-sonarqube
    file: docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
    SONARQUBE_JDBC_URL: "jdbc:postgresql://postgresql.{{ INFRASTRUCTURE }}:5432/sonar"
    SONARQUBE_JDBC_USERNAME: sonar
    SONARQUBE_JDBC_PASSWORD: sonar
  roles:
  - { role: docker-compose, tags: ["sonarqube"] }
- hosts: "net"
  tasks:
  - name: DNS record of sonarqube
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} sonarqube A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} sonarqube A 172.22.101.15"
    sudo: yes
    tags: ["dns", "sonarqube"]
- name: sonar
  hosts: "repository"
  vars:
    file: docker-compose-sonar.yml
  environment:
    BACKEND_DOMAIN: sonarqube
    BACKEND_PORT: 9000
    INFRASTRUCTURE: "{{ infrastructure }}"
    SERVER_DOMAIN: sonar
  roles:
  - { role: docker-proxy, tags: ["sonarqube"] }
- hosts: "net"
  tasks:
  - name: DNS record of sonar
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} sonar A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} sonar A 172.22.101.10"
    sudo: yes
    tags: ["dns", "sonarqube"]

- name: gitlab
  hosts: "ci"
  vars:
    git_repo: https://github.com/home1-oss/docker-gitlab.git
    git_dest: /tmp/docker-gitlab
    file: gitlab/docker-compose.yml
    pull: yes
  environment:
    CONFIGSERVER_WEBHOOK_ENDPOINT: http://configserver.internal:8888/monitor
    GITLAB_ROOT_PASSWORD: user_pass
    GITLAB_SHELL_SSH_PORT: 20022
    GIT_ADMIN_USERNAME: user
    GIT_DEPLOY_KEY: /app/gitlab/data/default_deploy_key.pub
    GIT_HTTP_PORT: 10080
    GIT_WORKSPACE: /app/gitlab/data/workspace
    INFRASTRUCTURE: "{{ infrastructure }}"
    SKIP_AUTO_REPO_INIT: false
  sudo: yes
  roles:
  - { role: docker-compose, tags: ["gitlab"] }
- hosts: "net"
  tasks:
  - name: DNS record of gitlab
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} gitlab A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} gitlab A 172.22.101.15"
    sudo: yes
    tags: ["dns", "gitlab"]
- name: git
  hosts: "repository"
  vars:
    file: docker-compose-git.yml
  environment:
    BACKEND_DOMAIN: gitlab
    BACKEND_PORT: 10080
    INFRASTRUCTURE: "{{ infrastructure }}"
    SERVER_DOMAIN: git
  roles:
  - { role: docker-proxy, tags: ["gitlab"] }
- hosts: "net"
  tasks:
  - name: DNS record of git
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} git A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} git A 172.22.101.10"
    sudo: yes
    tags: ["dns", "gitlab"]

- name: jenkins
  hosts: "ci"
  vars:
    git_repo: https://github.com/home1-oss/docker-jenkins.git
    git_dest: /tmp/docker-jenkins
    file: jenkins/docker-compose.yml
    pull: yes
  environment:
    INFRASTRUCTURE: "{{ infrastructure }}"
  sudo: yes
  roles:
  - { role: docker-compose, tags: ["jenkins"] }
- hosts: "net"
  tasks:
  - name: DNS record of jenkins
    shell: "{{ item }}"
    with_items:
    - "docker exec bind.{{ infrastructure }} recorddel {{ infrastructure }} jenkins A"
    - "docker exec bind.{{ infrastructure }} recordadd {{ infrastructure }} jenkins A 172.22.101.15"
    sudo: yes
    tags: ["dns", "jenkins"]
