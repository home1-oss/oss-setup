# -*- mode: ruby -*-
# vi: set ft=ruby :

INIT_SH_PATH = File.join(File.dirname(__FILE__), "vagrant_assets/init.sh")
SYSCTL_CONF_PATH = File.join(File.dirname(__FILE__), "vagrant_assets/sysctl.conf")

Vagrant.configure(2) do |config|
  config.ssh.insert_key = false
  config.ssh.private_key_path = ["#{ENV['HOME']}/.vagrant.d/insecure_private_key","#{ENV['HOME']}/.ssh/id_rsa"]
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'" # avoids 'stdin: is not a tty' error.

  config.vm.box_check_update = false
  config.vm.box= "chshawkn/ubuntu1604"

  config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", disabled: "true"

  config.vm.define "net" do |net|
    net.vm.hostname = 'net'

    net.vm.network "forwarded_port", guest: 22, host: 60005, auto_correct: true
    net.vm.network "private_network", adapter: 2, ip: "172.22.101.5", netmask: "255.255.255.0", nic_type: "82545EM"
    net.vm.network "public_network", adapter: 3, ip: "192.168.199.5", netmask: "255.255.255.0", nic_type: "82545EM"
    #net.vm.provision "shell", run: "always", inline: "ifconfig eth2 192.168.199.5 netmask 255.255.255.0 up"
    # see: https://en.wikipedia.org/wiki/Unique_local_address
    #net.vm.provision "shell", run: "always", inline: "ifconfig eth2 inet6 add fc00::17/7"

    net.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--cpus", 1]
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.customize ["modifyvm", :id, "--name", "net"]
    end
  end

  config.vm.define "data" do |data|
    data.vm.hostname = 'data'

    data.vm.network "forwarded_port", guest: 22, host: 60010, auto_correct: true
    data.vm.network "private_network", adapter: 2, ip: "172.22.101.10", netmask: "255.255.255.0", nic_type: "82545EM"
    data.vm.network "public_network", adapter: 3, ip: "192.168.199.10", netmask: "255.255.255.0", nic_type: "82545EM"

    data.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--memory", 4096]
      v.customize ["modifyvm", :id, "--name", "data"]
    end
  end

  config.vm.define "repository" do |repository|
    repository.vm.hostname = 'repository'

    repository.vm.network "forwarded_port", guest: 22, host: 60015, auto_correct: true
    repository.vm.network "private_network", adapter: 2, ip: "172.22.101.15", netmask: "255.255.255.0", nic_type: "82545EM"
    repository.vm.network "public_network", adapter: 3, ip: "192.168.199.15", netmask: "255.255.255.0", nic_type: "82545EM"

    repository.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--memory", 4096]
      v.customize ["modifyvm", :id, "--name", "repository"]
    end
  end

  config.vm.define "ci" do |ci|
    ci.vm.hostname = 'ci'

    ci.vm.network "forwarded_port", guest: 22, host: 60020, auto_correct: true
    ci.vm.network "private_network", adapter: 2, ip: "172.22.101.20", netmask: "255.255.255.0", nic_type: "82545EM"
    ci.vm.network "public_network", adapter: 3, ip: "192.168.199.20", netmask: "255.255.255.0", nic_type: "82545EM"

    ci.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--memory", 4096]
      v.customize ["modifyvm", :id, "--name", "ci"]
    end
  end

  config.vm.provision "shell", :privileged => true, inline: "echo whoami $(whoami) pwd $(pwd)"

  if File.exist?(SYSCTL_CONF_PATH)
    config.vm.provision :file, :source => "#{SYSCTL_CONF_PATH}", :destination => "/tmp/sysctl.conf"
    config.vm.provision :shell, :privileged => true, :inline => "if [[ -f /tmp/sysctl.conf ]]; then mv /tmp/sysctl.conf /etc/sysctl.conf; sysctl -p; fi"
  end
  if File.exist?(INIT_SH_PATH)
    config.vm.provision :file, :source => "#{INIT_SH_PATH}", :destination => "/tmp/init.sh"
    config.vm.provision :shell, :privileged => true, :inline => "chmod 755 /tmp/init.sh"
    config.vm.provision :shell, :privileged => true, :inline => "/tmp/init.sh"
  end

  config.vm.provision "shell", run: "always", inline: <<-SCRIPT
    eval `route -n | awk '{ if ($8 =="eth0" && $2 != "0.0.0.0") print "route del default gw " $2; }'`
    eval `route -n | awk '{ if ($8 =="enp0s3" && $2 != "0.0.0.0") print "route del default gw " $2; }'`
    #eval `route -n | awk '{ if ($8 =="eth1" && $2 != "0.0.0.0") print "route del default gw " $2; }'`

    route add default gw 192.168.199.1 || echo route of default gw 192.168.199.1 already exists
    #route -A inet6 add default gw fc00::1 eth2
  SCRIPT
end
